<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <appSettings>
    <add key="ScriptLauncher" value="cmd.exe"/>
    
    <!-- 
    ConfigureSecDbEnvironment defines which version of SecDb environment is to be configured before opening an actual connection to SecDb. 
    NOTE: If any of the required tasks flatlines, the whole setup fails (as of now no rollbacks are implemented).
    -->
    <add key="ConfigureSecDbEnvironment" value="UserAccount"/>

    
    <!-- ******************* Some pre-defined SecDb environments *************** -->
    
    <!-- pre-defined ServiceAccount environment with verbose crash dump generation ON -->
    <add key="ServiceAccountVerbose" value="MapDrivesTask;SetProductionEnvironmentTask;SetSecDbCrashReportingVerboseTask;SetIgnoreExceptionTask"/>
    
    <!-- pre-defined ServiceAccount environment  -->
    <add key="ServiceAccount" value="MapDrivesTask;SetProductionEnvironmentTask"/>

    <!-- pre-defined UserAccount environment. -->
    <add key ="UserAccount" value="SetSecDbCrashReportingVerboseTask;SetIgnoreExceptionTask"/>

    <!-- ********************  Some pre-defined tasks ****************  -->
    
    <!-- /c echo ###BeginEnvVars### && ( for /F "tokens=2" %i in ('\\exelonds\EntApps\CoreApps\sw\ficc\winlogin\Init-SecDb.cmd /D') do echo %i ) && echo ###EndEnvVars###)  -->
    <add key="MapDrivesTask" value="/c echo ###BeginEnvVars### &amp;&amp; \\exelonds\EntApps\CoreApps\sw\ficc\winlogin\Init-SecDb.cmd /D &amp;&amp; echo ###EndEnvVars###"/>
    
    <add key="SetPreProductionEnvironmentTask" value="/c \\EXELONDS\EntApps\CoreApps\ja\prod\utilw32\mapnew.cmd &amp;&amp; echo ###BeginEnvVars### &amp;&amp; set &amp;&amp; echo ###EndEnvVars###"/>

    <add key="SetProductionEnvironmentTask" value="/c \\EXELONDS\EntApps\CoreApps\ja\prod\utilw32\mapprod.cmd &amp;&amp; echo ###BeginEnvVars### &amp;&amp; set &amp;&amp; echo ###EndEnvVars###"/>

    <add key="SetUserEnvironmentTask" value="/c \\EXELONDS\EntApps\CoreApps\ja\prod\utilw32\mapuser.cmd &amp;&amp; echo ###BeginEnvVars### &amp;&amp; set &amp;&amp; echo ###EndEnvVars###"/>

    <!-- SecDbCrashReportingVerbose needs to have SECDB_CRASH_REPORTING_ENABLED flag set in the SecDb config file -->
    <add key="SetSecDbCrashReportingVerboseTask" value="/c echo ###BeginEnvVars### &amp;&amp; echo SECDB_CRASH_REPORTING_VERBOSE=1 &amp;&amp; echo ###EndEnvVars###"/>

    <!-- 
      SetIgnoreExceptionTask defines the SECDB_IGNORED_EXCEPTIONS env. variable, 
      which holds exceptions that should be ignored by our crash dump generation logic (hex):
      
      0x000006BA - Microsoft's first chance exception
      0xE0434F4D - exception thrown by managed code
      0xE0434F4E - exception thrown by managed code
      0xE0434352 - exception thrown by managed code
      0xE06D7363 - Microsoft's c++ exception
      
      NOTE:
      SECDB_CRASH_REPORTING_VERBOSE needs to be turn on for this option to work.
      
      NOTE: 
      Crash dump generation cannot be disabled for ACCESS_VIOLATION (0xc0000005).
    -->
    <add key="SetIgnoreExceptionTask" value="/c echo ###BeginEnvVars### &amp;&amp; echo SECDB_IGNORED_EXCEPTIONS=6BA;E0434F4D;40010006;E06D7363;E0434F4E;E0434352 &amp;&amp; echo ###EndEnvVars###"/>

    <!-- 
      SetReportedExceptionTask defines the SECDB_REPORTED_EXCEPTIONS env. variable,
      which holds exceptions that should be reported by our crash dump generation logic (hex):
    
      EXCEPTION_INT_DIVIDE_BY_ZERO 0xC0000094
      EXCEPTION_STACK_OVERFLOW     0xC00000FD
      EXCEPTION_INVALID_HANDLE     0xC0000008
      
      
      NOTE:
      SECDB_CRASH_REPORTING_VERBOSE needs to be turn on for this option to work.
      
      NOTE:      
      SECDB_REPORTED_EXCEPTIONS takes precedence over SECDB_IGNORED_EXCEPTIONS. If the former is non-empty, the latter is ignored.
      
      NOTE:
      ACCESS_VIOLATION (0xc0000005) is always reported.
    -->
      <add key="SetReportedExceptionTask" value="/c echo ###BeginEnvVars### &amp;&amp; echo SECDB_REPORTED_EXCEPTIONS=C0000094;C00000FD;C0000008 &amp;&amp; echo ###EndEnvVars###"/>

    <!-- script timeout (in milliseconds) -->
    <add key="ScriptTimeout" value="180000"/>

    <!-- 
      Use this tag to specify env. variables which should be ignored.
      This may be useful when an env. variable which we don't want to modify is returned as part of script's output.
      
      <add key="IgnoreVariables" value="Var1;Var2"/>
    -->
    <add key="IgnoreVariables" value=""/>
    
  </appSettings>
</configuration>
